pluginManagement {
    repositories {
        maven {
            // RFG Maven
            name 'GT Neo Horizon Maven'
            url 'http://jenkins.usrv.eu:8081/nexus/content/groups/public/'
            allowInsecureProtocol = true
            mavenContent {
                includeGroup 'com.gtnewhorizons'
                includeGroup 'com.gtnewhorizons.retrofuturagradle'
            }
        }
        gradlePluginPortal()
        mavenCentral()
        mavenLocal()
    }
}

plugins {
    // Automatic toolchain provisioning
    id 'org.gradle.toolchains.foojay-resolver-convention' version '0.5.0'
}

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            plugin('rfg', 'com.gtnewhorizons.retrofuturagradle').version('1.3.26')
            plugin('idea-ext', 'org.jetbrains.gradle.plugin.idea-ext').version('1.1.7')
            plugin('kotlin-jvm', 'org.jetbrains.kotlin.jvm').version('1.9.22')
            plugin('kotlin-gradle', 'org.jetbrains.kotlin.kapt').version('1.9.22')
        }
        versions {
            /*
            * How to use this version control?
            * library(String alias, String group, String artifact).version(String version)
            *
            * Example for call it in <gradle/scripts/dependencies.gradle> :
            * implementation versions.library.<alias>
            *
            * You can use bundle(String alias, String[] libraryAlias) to package some libraries to a bundle
            * Then you can call it like 'versions.bundle.<alias>'.
            *
            * More features: https://docs.gradle.org/current/userguide/platforms.html
            */
        }
    }
}

// Due to an IntelliJ bug, this has to be done
// rootProject.name = archives_base_name
rootProject.name = rootProject.projectDir.getName()
